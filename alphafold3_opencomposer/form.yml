---
form:
  partition:
    widget: select
    label: Partition
    options:
      - [
          gpu,
          gpu,
          set-label-cores_memory_1: Number of cores (1 - 128),
          set-max-cores_memory_1: 128,
          set-label-cores_memory_2: Memory (up to 800GB),
          set-max-cores_memory_2: 500,
          set-label-gpus: Number of GPUs (1 - 8),
          set-max-gpus: 8,
          set-label-time_1: Max run time hours (0 - 168),
          set-max-time_1: 168,
        ]
      - [
          preempt,
          preempt,
          set-label-cores_memory_1: Number of cores (1 - 128),
          set-max-cores_memory_1: 128,
          set-label-cores_memory_2: Memory (up to 1000GB),
          set-max-cores_memory_2: 1000,
          set-label-time_1: Max run time hours (0 - 168),
          set-max-time_1: 168,
        ]

  cores_memory:
    widget: number
    label: [Number of cores, Memory]
    size: 2
    value: [1, 4]

  gpu_type:
    widget: select
    label: GPU Arch
    help: gpu partion only has p100 and a100
    options:
      - ["P100", "p100"]
      - ["A100", "a100_40"]
      - ["v100", "v100"]
      - ["T4", "t4"]
      - ["RTX 6000", "rtx_6000"]
      - ["RTX A6000", "rtx_a6000"]
      - ["RTX 6000Ada", "rtx_6000ada"]
      - ["L40", "l40"]
      - ["L40s", "l40s"]
      - ["H100", "h100"]

  gpus:
    widget: number
    label: Number of GPUs
    value: 1
    min: 1
    max: 8
    step: 1

  time:
    widget: number
    label: [Max run time hours (0 - 24), Max run minutes (0 - 59)]
    size: 2
    value: [1, 0]
    min: [0, 0]
    max: [24, 59]
    step: [1, 1]

  version:
    label: Software Version
    widget: select
    options:
      - ["3.0.0"]
      - ["3.0.1"]

  json_path:
    widget: path
    required: false
    label: json_path
    help: |
      Path to a single input JSON file.
    favorites:
      - /cluster/tufts
      - /cluster/home

  input_dir:
    widget: path
    required: false
    label: input_dir
    help: |
      Path to the directory containing input JSON files.
    favorites:
      - /cluster/tufts
      - /cluster/home

  output_dir:
    widget: path
    required: yes
    label: output_dir
    favorites:
      - /cluster/tufts
      - /cluster/home

  model_dir:
    widget: path
    required: true
    label: model_dir
    help: |
      <p>Users needs to obtain their own copy of the trained model parameters by completing  
      <a href="https://docs.google.com/forms/d/e/1FAIpQLSfWZAgo1aYk0O4MuAXZj8xRQ8DafeFJnldNOnh_13qAx2ceZw/viewform" target="_blank">this form </a>.</p>
    favorites:
      - /cluster/tufts
      - /cluster/home

  max_template_date:
    label: max_template_date
    widget: text
    value: "2021-09-30"
    help: |
      Maximum template release date to consider. Format: YYYY-MM-DD. All templates released after this date will be ignored.

  show_advanced_option:
    widget: checkbox
    label:
    options:
      - [
          "Show advanced option",
          "",
          show-run_data_pipeline,
          show-run_inference,
          show-num_diffusion_samples,
          show-num_recycles,
          show-num_seeds,
          show-conformer_max_iterations,
          show-log,
        ]

  run_inference:
    label: run_inference
    widget: radio
    value: true
    options:
      - ["true", true]
      - ["false", false]
    help: |
      Whether to run the inference. This part requires a GPU.

  run_data_pipeline:
    label: run_data_pipeline
    widget: radio
    value: true
    options:
      - ["true", true]
      - ["false", false]
    help: |
      Whether to run the data pipeline, i.e. genetic and template search.
      This part is CPU-only, time consuming and could be run on a machine without a GPU.

  num_diffusion_samples:
    label: num_diffusion_samples
    widget: number
    min: 1
    step: 1
    required: false
    help: |
      Number of diffusion samples to generate.

  num_recycles:
    label: num_recycles
    widget: number
    min: 1
    step: 1
    required: false
    help: |
      Number of recycles to use during inference.

  num_seeds:
    label: num_seeds
    widget: number
    min: 1
    step: 1
    required: false
    help: |
      Number of seeds to use for inference. If set, only a single seed must be provided in the input JSON. AlphaFold 3 will then generate random seeds in sequence, starting from the single seed specified in the input JSON. The full input JSON produced by AlphaFold 3 will include the generated random seeds. If not set, AlphaFold 3 will use the seeds as provided in the input JSON.

  conformer_max_iterations:
    label: conformer_max_iterations
    widget: number
    min: 1
    step: 1
    required: false
    help: |
      Optional override for maximum number of iterations to run for RDKit conformer search.

  mail_option:
    label: Mail option
    widget: checkbox
    direction: horizontal
    separator: ","
    indent: 1
    options:
      - ["Beginning of job execution", "BEGIN", enable-email]
      - ["End of job execution", "END", enable-email]
      - ["Fail of job", "FAIL", enable-email]
      - ["When the job is requeued", "REQUEUE", enable-email]
      - ["All", "ALL", enable-email]

  email:
    widget: email
    label: Email
    indent: 2

script: |
  #!/bin/bash
  #SBATCH -p #{partition}
  #SBATCH -n #{cores_memory_1}
  #SBATCH --mem #{cores_memory_2}G
  #SBATCH -t #{time_1}:#{time_2}:00
  #SBATCH --gres=gpu:#{gpu_type}:#{gpus}      
  #SBATCH --mail-user=#{email}
  #SBATCH --mail-type=#{mail_option}
  #SBATCH --error=%x-%J-%u.err
  #SBATCH --output=%x-%J-%u.out

  module load alphafold3/#{version}
  DB="/cluster/tufts/biocontainers/datasets/alphafold3/20241219/public_databases"

  run_alphafold.py --output_dir="#{output_dir}" \
    --json_path=#{json_path} \
    --input_dir=#{input_dir} \
    --db_dir="$DB" \
    --model_dir="#{model_dir}" \
    --max_template_date="#{max_template_date}" \
    --run_data_pipeline="#{run_data_pipeline}" \
    --run_inference="#{run_inference}" \
    --num_diffusion_samples="#{num_diffusion_samples}" \
    --num_recycles="#{num_recycles}" \
    --num_seeds="#{num_seeds}" \
    --conformer_max_iterations="#{conformer_max_iterations}"
